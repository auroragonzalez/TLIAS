setwd("~/Git_repos/postdoc/estanciaERAU/paper/k-prod")
library("ggplot2")
df = read.table("kprototypes-X_hat-iii.csv", sep=";", head=T)
labels = read.table("labels5.csv", sep=";", head=T)
dflab = cbind(df, labels$X)
names(dflab)[13] = "cluster"
boxplot( dflab$X0~dflab$cluster)
barplot(table(dflab$X1))
p<-ggplot(data=df, aes(x=X10, y=len)) +
geom_bar(stat="identity")
p
library(tidyr)
# The arguments to gather():
# - data: Data object
# - key: Name of new key column (made from names of data columns)
# - value: Name of new value column
# - ...: Names of source columns that contain values
# - factor_key: Treat the new key column as a factor (instead of character vector)
names(dflab)[2:12] = c("Energy star \n score", "Heating Type", "Industry", "# of floors",
"Occupants", "rating", "sqm", "Sub-industry", "Timezone", "Year built",
"Primary space use")
#data_long <- gather(dflab, condition, measurement, c(X0,X4,X6,X9), factor_key=TRUE)
data_long <- gather(dflab, condition, measurement, c("Energy star \n score","Occupants", "sqm", "Year built"), factor_key=TRUE)
data_long
data_long$cluster  = as.character(data_long$cluster)
bp <- ggplot(data_long, aes(x=cluster, y=measurement, group=cluster)) +
geom_boxplot(aes(fill=cluster))
bp
bp + facet_grid(condition ~ ., scales = "free")+
theme(
strip.text = element_text(face = "bold", size = rel(1.1)),
# strip.background = element_rect(fill = "lightblue", colour = "black", size = 1)
)
library(reshape2)
library(ggplot2)
mdat2 <- melt(dflab[,-c(1,2,6,8,11)], id.vars="class")
mdat2$class = as.character(mdat2$class)
ggplot(mdat2, aes(variable, value, fill=class)) +
geom_bar(stat="identity", position="dodge")
ggplot(mdat2, aes(x=class, y=value))+
geom_bar(stat='identity', fill="forest green")+
facet_wrap(~variable)
head(dflab)
hist(dflab$X1)
dflab$class = as.character(dflab$class)
dflab
setwd("~/Git_repos/postdoc/estanciaERAU/paper/k-prod")
####################3
library("ggplot2")
df = read.table("kprototypes-X_hat-iii.csv", sep=";", head=T)
labels = read.table("labels5.csv", sep=";", head=T)
dflab = cbind(df, labels$X)
names(dflab)[13] = "cluster"
boxplot( dflab$X0~dflab$cluster)
barplot(table(dflab$X1))
p<-ggplot(data=df, aes(x=X10, y=len)) +
geom_bar(stat="identity")
p
library(tidyr)
# The arguments to gather():
# - data: Data object
# - key: Name of new key column (made from names of data columns)
# - value: Name of new value column
# - ...: Names of source columns that contain values
# - factor_key: Treat the new key column as a factor (instead of character vector)
names(dflab)[2:12] = c("Energy star \n score", "Heating Type", "Industry", "# of floors",
"Occupants", "rating", "sqm", "Sub-industry", "Timezone", "Year built",
"Primary space use")
#data_long <- gather(dflab, condition, measurement, c(X0,X4,X6,X9), factor_key=TRUE)
data_long <- gather(dflab, condition, measurement, c("Energy star \n score","Occupants", "sqm", "Year built"), factor_key=TRUE)
data_long
data_long$cluster  = as.character(data_long$cluster)
bp <- ggplot(data_long, aes(x=cluster, y=measurement, group=cluster)) +
geom_boxplot(aes(fill=cluster))
bp
bp + facet_grid(condition ~ ., scales = "free")+
theme(
strip.text = element_text(face = "bold", size = rel(1.1)),
# strip.background = element_rect(fill = "lightblue", colour = "black", size = 1)
)
library(reshape2)
library(ggplot2)
mdat2 <- melt(dflab[,-c(1,2,6,8,11)], id.vars="class")
mdat2$class = as.character(mdat2$class)
dflab
mdat2 <- melt(dflab[,-c(1,2,6,8,11)], id.vars="class")
mdat2 <- melt(dflab[,-c(1,2,6,8,11)], id.vars="cluster")
mdat2$class = as.character(mdat2$class)
mdat2 <- melt(dflab[,-c(1,2,6,8,11)], id.vars="cluster")
mdat2$cluster = as.character(mdat2$cluster)
ggplot(mdat2, aes(variable, value, fill=cluster)) +
geom_bar(stat="identity", position="dodge")
ggplot(mdat2, aes(x=class, y=value))+
geom_bar(stat='identity', fill="forest green")+
facet_wrap(~variable)
ggplot(mdat2, aes(x=cluster, y=value))+
geom_bar(stat='identity', fill="forest green")+
facet_wrap(~variable)
head(dflab)
hist(dflab$X1)
dflab$cluster = as.character(dflab$cluster)
library(plyr)
dflab$X1 = mapvalues(dflab$X1, from = as.character(1:7), to =
c("Biomass", "District heating", "Electricity",
"Gas", "Heat Networkn", "Heat Network \n and Steam",
"Oil"))
dflab$X1
head(dflab)
library("ggplot2")
df = read.table("kprototypes-X_hat-iii.csv", sep=";", head=T)
labels = read.table("labels5.csv", sep=";", head=T)
head8df
head(df)
dflab = cbind(df, labels$X)
names(dflab)[13] = "cluster"
boxplot( dflab$X0~dflab$cluster)
barplot(table(dflab$X1))
p<-ggplot(data=df, aes(x=X10, y=len)) +
geom_bar(stat="identity")
p
head(dflab)
library(tidyr)
library(reshape2)
library(ggplot2)
mdat2 <- melt(dflab[,-c(1,2,6,8,11)], id.vars="cluster")
mdat2$cluster = as.character(mdat2$cluster)
ggplot(mdat2, aes(variable, value, fill=cluster)) +
geom_bar(stat="identity", position="dodge")
ggplot(mdat2, aes(x=cluster, y=value))+
geom_bar(stat='identity', fill="forest green")+
facet_wrap(~variable)
head(dflab)
hist(dflab$X1)
dflab$cluster = as.character(dflab$cluster)
library(plyr)
dflab$X1 = mapvalues(dflab$X1, from = as.character(1:7), to =
c("Biomass", "District heating", "Electricity",
"Gas", "Heat Networkn", "Heat Network \n and Steam",
"Oil"))
dflab$X2= mapvalues(dflab$X2, from = as.character(1:3), to =
c("Commercial Property", "Education", "Government"))
dflab$X5 = mapvalues(dflab$X5, from = as.character(1:6), to =
c("B", "C", "D","E", "F", "G"))
dflab$X7 = mapvalues(dflab$X7, from = as.character(1:8), to =
c("Bank/Financial Services", "Business Service",
"College/University", "Commercial Real Estate",
"Corporate Office", "Other Government Buildings",
"Primary/Secondary School", "Social Services"))
dflab$X8 = mapvalues(dflab$X8, from = as.character(1:8), to =
c("America/Chicago", "America/Denver", "America/Los Angeles", "America/New
York", "America/Phoenix", "Asia/Singapore", "Europe/London", "Europe/Zurich"))
dflab$X10= mapvalues(dflab$X10, from = as.character(c(1:5,7)), to =
c("Office", "PrimClass", "UnivClass", "Univ-Dorm", "UnivLab", "UnivDining"))
ggplot(dflab, aes(x=X1, fill=class)) +
geom_histogram(stat = "count", color="black") +   facet_grid(class ~ ., scales = "free_y")
ggplot(dflab, aes(x=X1, fill=class)) +
geom_histogram(stat = "count", color="black") +   facet_grid(cluster ~ ., scales = "free_y")
dflab$cluster = as.character(dflab$cluster)
head(dflab)
ggplot(dflab, aes(x=X1, fill=cluster)) +
geom_histogram(stat = "count", color="black") +   facet_grid(cluster ~ ., scales = "free_y")
ggplot(dflab, aes(x=X1, fill=cluster)) +
geom_histogram(stat = "count", color="black") +   facet_grid(.~ cluster , scales = "free_y")
dev.off()
svg("./pics/X11.svg")
ggplot(dflab, aes(x=X1, fill=cluster)) +
geom_histogram(stat = "count", color="black") +   facet_grid(.~ cluster , scales = "free_y")
dev.off()
?geom_histogram
ggplot(dflab, aes(x=X1, fill=cluster)) +
geom_histogram(stat = "count", color="black") + coord_flip()+   facet_grid(.~ cluster , scales = "free_y")
dflab$X7 = mapvalues(dflab$X7, from = as.character(1:8), to =
c("Bank/Financial \n Services", "Business Service",
"College/ \n University", "Commercial \n Real Estate",
"Corporate \n Office", "Other Government \n Buildings",
"Primary/ \n Secondary \n School", "Social \n Services"))
library("ggplot2")
df = read.table("kprototypes-X_hat-iii.csv", sep=";", head=T)
labels = read.table("labels5.csv", sep=";", head=T)
dflab = cbind(df, labels$X)
names(dflab)[13] = "cluster"
boxplot( dflab$X0~dflab$cluster)
dflab$X7 = mapvalues(dflab$X7, from = as.character(1:8), to =
c("Bank/Financial \n Services", "Business Service",
"College/ \n University", "Commercial \n Real Estate",
"Corporate \n Office", "Other Government \n Buildings",
"Primary/ \n Secondary \n School", "Social \n Services"))
dev.off()
svg("./pics/X7.svg")
ggplot(dflab, aes(x=X7, fill=class)) +
geom_histogram(stat = "count", color="black") +   facet_grid(class ~ ., scales = "free_y")
dev.off()
dev.off()
svg("./pics/X7.svg")
ggplot(dflab, aes(x=X7, fill=cluster)) +
geom_histogram(stat = "count", color="black") +   facet_grid(cluster ~ ., scales = "free_y")
dev.off()
setwd("~/Git_repos/postdoc/estanciaERAU/paper/k-prod")
setwd("~/Git_repos/postdoc/estanciaERAU/paper/k-prod")
cost = read.table("cost.txt")
cost$clusters = 1:nrow(cost)
cost$clusters = as.factor(cost$clusters)
names(cost)[1] = "cost"
ggplot(data=cost, aes(x=clusters, y=cost, group=1, color="darkred")) +
geom_line()+
geom_point()
setwd("~/Git_repos/transfer-learning-IEEEIoTjournal/pics")
library("ggplot2")
cost = read.table("../k-prod1/cost.txt")
cost$clusters = 1:nrow(cost)
cost$clusters = as.factor(cost$clusters)
names(cost)[1] = "cost"
ggplot(data=cost, aes(x=clusters, y=cost, group=1, color="darkred")) +
geom_line()+
geom_point()
ggplot(data=cost, aes(x=clusters, y=cost, group=1, color="darkred")) +
geom_line()+
geom_point()
?svg
dev.off()
svg("elbow.svg",width = 4, height = 4)
ggplot(data=cost, aes(x=clusters, y=cost, group=1, color="darkred")) +
geom_line()+
geom_point()
dev.off()
dev.off()
svg("elbow.svg",width = 5, height = 5)
ggplot(data=cost, aes(x=clusters, y=cost, group=1, color="darkred")) +
geom_line()+
geom_point()
dev.off()
library("ggplot2")
cost = read.table("../k-prod1/cost.txt")
cost$clusters = 1:nrow(cost)
cost$clusters = as.factor(cost$clusters)
names(cost)[1] = "cost"
ggplot(data=cost, aes(x=clusters, y=cost, group=1, color="darkred")) +
geom_line()+
geom_point()
dev.off()
svg("elbow.svg",width = 4, height = 4)
ggplot(data=cost, aes(x=clusters, y=cost, group=1, color="darkred")) +
geom_line()+
geom_point()
dev.off()
library("ggplot2")
cost = read.table("../k-prod1/cost.txt")
cost$clusters = 1:nrow(cost)
cost$clusters = as.factor(cost$clusters)
names(cost)[1] = "cost"
ggplot(data=cost, aes(x=clusters, y=cost, group=1, color="darkred")) +
geom_line()+
geom_point()
dev.off()
svg("elbow.svg",width = 5, height = 3.5)
ggplot(data=cost, aes(x=clusters, y=cost, group=1, color="darkred")) +
geom_line()+
geom_point()
dev.off()
library("ggplot2")
cost = read.table("../k-prod1/cost.txt")
cost$clusters = 1:nrow(cost)
cost$clusters = as.factor(cost$clusters)
names(cost)[1] = "cost"
ggplot(data=cost, aes(x=clusters, y=cost, group=1, color="darkred")) +
geom_line()+
geom_point()
dev.off()
svg("elbow.svg",width = 5, height = 3)
ggplot(data=cost, aes(x=clusters, y=cost, group=1, color="darkred")) +
geom_line()+
geom_point()
dev.off()
library("ggplot2")
cost = read.table("../k-prod1/cost.txt")
cost$clusters = 1:nrow(cost)
cost$clusters = as.factor(cost$clusters)
names(cost)[1] = "cost"
ggplot(data=cost, aes(x=clusters, y=cost, group=1, color="darkred")) +
geom_line()+
geom_point()
dev.off()
svg("elbow.svg",width = 5, height = 3)
ggplot(data=cost, aes(x=clusters, y=cost, group=1, color="darkred")) +
geom_line()+
geom_point()
dev.off()
setwd("~/Git_repos/postdoc/estanciaERAU/paper/transfer-learning/results")
setwd("~/Git_repos/transfer-learning-IEEEIoTjournal/pics")
# STUDY 1 WITH AND WITHOUT
data = read.table("../tl/resW-15-iv.csv", sep=";", head=T)
data = data[-1]
names(data) =  c("cluster", "buidlingID", "mae", "mse", "rmse", "cvrmse", "mape")
withd = data
data = read.table("../tl/resWO-15-iv.csv", sep=";", head=T)
data = data[-1]
names(data) =  c("cluster", "buidlingID", "mae", "mse", "rmse", "cvrmse", "mape")
# STUDY 1 WITH AND WITHOUT
data = read.table("../tl/resW-15-iv.csv", sep=";", head=T)
data = data[-1]
names(data) =  c("cluster", "buidlingID", "mae", "mse", "rmse", "cvrmse", "mape")
withd = data
data = read.table("../tl/resWO-15-iv.csv", sep=";", head=T)
data = data[-1]
names(data) =  c("cluster", "buidlingID", "mae", "mse", "rmse", "cvrmse", "mape")
without = data
library("dplyr")
meanW = summarise(group_by(withd,cluster),
mae = mean(mae),
mse = mean(mse),
rmse = mean(rmse),
cvrmse = mean(cvrmse),
mape = mean(mape)
)
meanWO = summarise(group_by(without,cluster),
mae = mean(mae),
mse = mean(mse),
rmse = mean(rmse),
cvrmse = mean(cvrmse),
mape = mean(mape)
)
CVRMSE = c(meanW$cvrmse, meanWO$cvrmse)
TL = as.factor(c(rep("Yes",nrow(meanW)), rep("No",nrow(meanWO))))
centroid = as.factor(c(1:15,1:15))
df3 <- data.frame(TL, centroid, CVRMSE)
p <- ggplot(data=df3, aes(x=centroid, y=CVRMSE, fill=TL)) +
geom_bar(stat="identity", color="black", position=position_dodge())+
theme_minimal()
# Use custom colors
p + scale_fill_manual(values=c('#999999','#E69F00'))
dev.off()
svg("pics/comparison1.svg", width = 10, height = 6)
p <- ggplot(data=df3, aes(x=centroid, y=CVRMSE, fill=TL)) +
geom_bar(stat="identity", color="black", position=position_dodge())
p
dev.off()
library("dplyr")
library("ggplot2")
# STUDY 1 WITH AND WITHOUT
data = read.table("../tl/resW-15-iv.csv", sep=";", head=T)
data = data[-1]
names(data) =  c("cluster", "buidlingID", "mae", "mse", "rmse", "cvrmse", "mape")
withd = data
data = read.table("../tl/resWO-15-iv.csv", sep=";", head=T)
data = data[-1]
names(data) =  c("cluster", "buidlingID", "mae", "mse", "rmse", "cvrmse", "mape")
without = data
meanW = summarise(group_by(withd,cluster),
mae = mean(mae),
mse = mean(mse),
rmse = mean(rmse),
cvrmse = mean(cvrmse),
mape = mean(mape)
)
meanWO = summarise(group_by(without,cluster),
mae = mean(mae),
mse = mean(mse),
rmse = mean(rmse),
cvrmse = mean(cvrmse),
mape = mean(mape)
)
CVRMSE = c(meanW$cvrmse, meanWO$cvrmse)
TL = as.factor(c(rep("Yes",nrow(meanW)), rep("No",nrow(meanWO))))
centroid = as.factor(c(1:15,1:15))
df3 <- data.frame(TL, centroid, CVRMSE)
dev.off()
svg("pics/comparison1.svg", width = 10, height = 6)
p <- ggplot(data=df3, aes(x=centroid, y=CVRMSE, fill=TL)) +
geom_bar(stat="identity", color="black", position=position_dodge())
p
dev.off()
p <- ggplot(data=df3, aes(x=centroid, y=CVRMSE, fill=TL)) +
geom_bar(stat="identity", color="black", position=position_dodge())
p
setwd("~/Git_repos/transfer-learning-IEEEIoTjournal/pics")
dev.off()
svg("comparison1.svg", width = 10, height = 6)
p <- ggplot(data=df3, aes(x=centroid, y=CVRMSE, fill=TL)) +
geom_bar(stat="identity", color="black", position=position_dodge())
p
dev.off()
